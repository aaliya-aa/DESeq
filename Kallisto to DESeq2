

#Performed in R Studio 
# load packages----
library(rhdf5) #provides functions for handling hdf5 file formats (kallisto outputs bootstraps in this format)
library(tidyverse) # provides access to Hadley Wickham's collection of R packages for data science, which we will use throughout the course
library(tximport) # package for getting Kallisto results into R
library(ensembldb) #helps deal with ensembl
library(EnsDb.Hsapiens.v86) #replace with your organism-specific database package

# Create a text file that has essentially 2 columns: one column should have sample information: file name in where fastq files have been stored (eg: WT_1) 
and another column should condition type: treated or control


targets <- read_tsv("study27.txt")
path <- file.path(targets$sample, "abundance.tsv")
all(file.exists(path))
Tx <- transcripts(EnsDb.Hsapiens.v86, columns=c("tx_id", "gene_name"))
Tx <- as_tibble(Tx)
Tx <- dplyr::rename(Tx, target_id = tx_id)
#transcrip ID needs to be the first column in the dataframe
Tx <- dplyr::select(Tx, "target_id", "gene_name")
Txi_gene <- tximport(path,
type = "kallisto",
tx2gene = Tx,
txOut = FALSE, 
countsFromAbundance = "lengthScaledTPM",
ignoreTxVersion = TRUE)
library(DESeq2)
dds <- DESeqDataSetFromTximport(txi = Txi_gene,
colData = targets,
design = ~ condition)

# Load required libraries

install.packages("openxlsx")
library(openxlsx)
library(DESeq2)
# Perform DESeq analysis
dds <- DESeq(dds)
results <- results(dds)
# Save results to a CSV file
write.csv(as.data.frame(results), file = "DESeq2_results.csv")
library(DESeq2)
dds <- DESeqDataSetFromTximport(txi = Txi_gene,
colData = targets,
design = ~ condition)
# Load required libraries
install.packages("openxlsx")
library(openxlsx)
library(DESeq2)
# Perform DESeq analysis
dds <- DESeq(dds)
results <- results(dds)
# Save results to a CSV file
write.csv(as.data.frame(results), file = "DESeq2_results.csv")
# Read results from CSV file
results <- read.csv("DESeq2_results.csv")
# Define differentially expressed genes
# The normalisation range will differ from study to study 
filteredResults <- results[which(abs(results$log2FoldChange) > 2 & results$pvalue < 0.05),]
# Write filtered results to Excel file
write.xlsx(filteredResults, file = "DESeq2_filtered_results.xlsx")
install.packages("openxlsx")


